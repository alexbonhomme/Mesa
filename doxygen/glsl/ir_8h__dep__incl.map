<map id="ir.h" name="ir.h">
<area shape="rect" id="node3" href="$ast__array__index_8cpp.html" title="ast_array_index.cpp" alt="" coords="507,88,645,115"/>
<area shape="rect" id="node5" href="$glsl__symbol__table_8h.html" title="glsl_symbol_table.h" alt="" coords="974,88,1111,115"/>
<area shape="rect" id="node7" href="$ast__function_8cpp.html" title="ast_function.cpp" alt="" coords="5,179,123,205"/>
<area shape="rect" id="node9" href="$ast__to__hir_8cpp.html" title="ast_to_hir.cpp" alt="" coords="148,179,252,205"/>
<area shape="rect" id="node11" href="$builtin__variables_8cpp.html" title="builtin_variables.cpp" alt="" coords="277,179,416,205"/>
<area shape="rect" id="node13" href="$ir__import__prototypes_8cpp.html" title="Import function prototypes from one IR tree into another." alt="" coords="441,179,607,205"/>
<area shape="rect" id="node15" href="$link__functions_8cpp.html" title="link_functions.cpp" alt="" coords="631,179,757,205"/>
<area shape="rect" id="node17" href="$link__interface__blocks_8cpp.html" title="Linker support for GLSL&#39;s interface blocks." alt="" coords="782,179,951,205"/>
<area shape="rect" id="node19" href="$link__uniform__initializers_8cpp.html" title="link_uniform_initializers.cpp" alt="" coords="975,179,1157,205"/>
<area shape="rect" id="node21" href="$link__uniforms_8cpp.html" title="Assign locations for GLSL uniforms." alt="" coords="1182,179,1305,205"/>
<area shape="rect" id="node23" href="$linker_8cpp.html" title="GLSL linker implementation." alt="" coords="1330,179,1408,205"/>
<area shape="rect" id="node25" href="$lower__clip__distance_8cpp.html" title="This pass accounts for the difference between the way gl_ClipDistance is declared in standard GLSL (a..." alt="" coords="1433,179,1593,205"/>
<area shape="rect" id="node27" href="$lower__named__interface__blocks_8cpp.html" title="This lowering pass converts all interface blocks with instance names into interface blocks without an..." alt="" coords="1618,171,1773,213"/>
<area shape="rect" id="node29" href="$lower__packed__varyings_8cpp.html" title="lower_packed_varyings.cpp" alt="" coords="1798,179,1980,205"/>
<area shape="rect" id="node33" href="$ir__reader_8h.html" title="ir_reader.h" alt="" coords="1440,88,1523,115"/>
<area shape="rect" id="node36" href="$loop__analysis_8h.html" title="loop_analysis.h" alt="" coords="1547,88,1659,115"/>
<area shape="rect" id="node38" href="$hir__field__selection_8cpp.html" title="hir_field_selection.cpp" alt="" coords="1683,88,1833,115"/>
<area shape="rect" id="node40" href="$ir_8cpp.html" title="ir.cpp" alt="" coords="1858,88,1912,115"/>
<area shape="rect" id="node42" href="$ir__basic__block_8cpp.html" title="Basic block analysis of instruction streams." alt="" coords="1937,88,2068,115"/>
<area shape="rect" id="node44" href="$ir__builder_8h.html" title="ir_builder.h" alt="" coords="2193,88,2279,115"/>
<area shape="rect" id="node46" href="$lower__instructions_8cpp.html" title="Many GPUs lack native instructions for certain expression operations, and must replace them with some..." alt="" coords="2005,179,2157,205"/>
<area shape="rect" id="node48" href="$lower__packing__builtins_8cpp.html" title="lower_packing_builtins.cpp" alt="" coords="2181,179,2360,205"/>
<area shape="rect" id="node50" href="$lower__ubo__reference_8cpp.html" title="IR lower pass to replace dereferences of variables in a uniform buffer object with usage of ir_binop_..." alt="" coords="2385,179,2551,205"/>
<area shape="rect" id="node52" href="$ir__clone_8cpp.html" title="ir_clone.cpp" alt="" coords="2354,88,2445,115"/>
<area shape="rect" id="node54" href="$ir__constant__expression_8cpp.html" title="Evaluate and process constant valued expressions." alt="" coords="2471,88,2652,115"/>
<area shape="rect" id="node56" href="$ir__expression__flattening_8cpp.html" title="Takes the leaves of expression trees and makes them dereferences of assignments of the leaves to temp..." alt="" coords="2676,88,2860,115"/>
<area shape="rect" id="node58" href="$ir__function_8cpp.html" title="ir_function.cpp" alt="" coords="2884,88,2991,115"/>
<area shape="rect" id="node60" href="$ir__function__can__inline_8cpp.html" title="Determines if we can inline a function call using ir_function_inlining.cpp." alt="" coords="3015,88,3187,115"/>
<area shape="rect" id="node62" href="$ir__function__detect__recursion_8cpp.html" title="Determine whether a shader contains static recursion." alt="" coords="3212,81,3337,122"/>
<area shape="rect" id="node64" href="$ir__hierarchical__visitor_8cpp.html" title="ir_hierarchical_visitor.cpp" alt="" coords="3362,88,3531,115"/>
<area shape="rect" id="node66" href="$ir__hv__accept_8cpp.html" title="Implementations of all hierarchical visitor accept methods for IR instructions." alt="" coords="3555,88,3676,115"/>
<area shape="rect" id="node69" href="$ir__print__visitor_8h.html" title="ir_print_visitor.h" alt="" coords="3701,88,3816,115"/>
<area shape="rect" id="node71" href="$ir__rvalue__visitor_8cpp.html" title="Generic class to implement the common pattern we have of wanting to visit each ir_rvalue * and possib..." alt="" coords="3736,179,3875,205"/>
<area shape="rect" id="node74" href="$ir__set__program__inouts_8cpp.html" title="Sets the InputsRead and OutputsWritten of Mesa programs." alt="" coords="3891,88,4065,115"/>
<area shape="rect" id="node76" href="$ir__validate_8cpp.html" title="Attempts to verify that various invariants of the IR tree are true." alt="" coords="4091,88,4197,115"/>
<area shape="rect" id="node78" href="$ir__variable__refcount_8cpp.html" title="Provides a visitor which produces a list of variables referenced, how many times they were referenced..." alt="" coords="4228,179,4388,205"/>
<area shape="rect" id="node80" href="$ir__variable__refcount_8h.html" title="Provides a visitor which produces a list of variables referenced, how many times they were referenced..." alt="" coords="4221,88,4368,115"/>
<area shape="rect" id="node85" href="$link__uniform__block__active__visitor_8h.html" title="link_uniform_block\l_active_visitor.h" alt="" coords="4443,81,4573,122"/>
<area shape="rect" id="node87" href="$link__uniform__blocks_8cpp.html" title="link_uniform_blocks.cpp" alt="" coords="4477,179,4640,205"/>
<area shape="rect" id="node94" href="$lower__discard_8cpp.html" title="This pass moves discards out of if&#45;statements." alt="" coords="4649,88,4775,115"/>
<area shape="rect" id="node96" href="$lower__discard__flow_8cpp.html" title="Implements the GLSL 1.30 revision 9 rule for fragment shader discard handling:" alt="" coords="4799,88,4957,115"/>
<area shape="rect" id="node98" href="$lower__if__to__cond__assign_8cpp.html" title="This attempts to flatten if&#45;statements to conditional assignments for GPUs with limited or no flow co..." alt="" coords="4982,88,5172,115"/>
<area shape="rect" id="node101" href="$lower__jumps_8cpp.html" title="This pass lowers jumps (break, continue, and return) to if/else structures." alt="" coords="5197,88,5317,115"/>
<area shape="rect" id="node103" href="$lower__mat__op__to__vec_8cpp.html" title="Breaks matrix operation expressions down to a series of vector operations." alt="" coords="5342,88,5516,115"/>
<area shape="rect" id="node106" href="$lower__noise_8cpp.html" title="IR lower pass to remove noise opcodes." alt="" coords="5541,88,5656,115"/>
<area shape="rect" id="node108" href="$lower__output__reads_8cpp.html" title="In GLSL, shader output variables (such as varyings) can be both read and written." alt="" coords="5681,88,5841,115"/>
<area shape="rect" id="node112" href="$lower__texture__projection_8cpp.html" title="IR lower pass to perform the division of texture coordinates by the texture projector if present..." alt="" coords="5866,88,6053,115"/>
<area shape="rect" id="node115" href="$lower__variable__index__to__cond__assign_8cpp.html" title="Turns non&#45;constant indexing into array types to a series of conditional moves of each element into a ..." alt="" coords="6078,81,6223,122"/>
<area shape="rect" id="node117" href="$lower__vec__index__to__cond__assign_8cpp.html" title="Turns indexing into vector types to a series of conditional moves of each channel&#39;s swizzle into a te..." alt="" coords="6247,81,6384,122"/>
</map>
